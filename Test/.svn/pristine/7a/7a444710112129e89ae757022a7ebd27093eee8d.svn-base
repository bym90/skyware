import { Component } from '@angular/core';
import { IonicPage, NavController, NavParams, ViewController, AlertController } from 'ionic-angular';
import { Http, Headers, RequestOptions } from '@angular/http';
import * as moment from 'moment';
import 'rxjs/add/operator/map';

@IonicPage()
@Component({
  selector: 'page-calendar-write-modal',
  templateUrl: 'calendar-write-modal.html',
})
export class CalendarWriteModalPage {
  event = { startTime: new Date().toISOString(), endTime: new Date().toISOString()}
  minDate = new Date().toISOString();

  constructor(public navCtrl: NavController, public navParams: NavParams, private viewCtrl: ViewController, private alertCtrl: AlertController, private http: Http) {
    let preselectedDate = moment(this.navParams.get('selectedDay')).format();
    this.event.startTime = preselectedDate;
    this.event.endTime = preselectedDate;
  }

  cancel() {
    this.viewCtrl.dismiss();
  }

  save(event){   
    if(event.cate1 == "" || event.cate1 == null){
      let alert = this.alertCtrl.create({
        title: '카테고리를 선택하세요',
        buttons : ['확인']
      });
      alert.present();

    } else if(event.cate2 == "" || event.cate2 == null){
       let alert = this.alertCtrl.create({
         title: '세부카테고리를 선택하세요',
         buttons : ['확인']
       });
       alert.present();
     
    } else if(event.title == "" || event.title == null){
       let alert = this.alertCtrl.create({
          title: '일정제목을 입력하세요',
         buttons : ['확인']
       });
        alert.present();
     
    } else if(event.content == "" || event.content == null){
       let alert = this.alertCtrl.create({
         title: '일정내용을 입력하세요',
         buttons : ['확인']
        });
       alert.present();
      
    } else if(event.startTime > event.endTime){
       let alert = this.alertCtrl.create({
       title: '날짜를 다시 선택해주세요',
       subTitle: '일정마감날짜가 일정시작날짜 이전입니다.',
       buttons: ['확인']       
      });
      alert.present();

    } else if (isNaN(event.completion)){
        let alert = this.alertCtrl.create({
         title: '숫자만 입력하세요',
          buttons : ['확인']
        });
        alert.present();

    }  else {
      // var resultCode = "";
      // var resultMsg = "";
      var addr = "http://localhost:8080/mobile/calendarWrite";
      let headers = new Headers({"Content-Type": "application/x-www-form-urlencoded"});
      let options = new RequestOptions({headers: headers});

      if(event.memo == undefined){   
        event.memo = "";
      }
      let data = 'cate1=' + event.cate1
                +'&cate2=' + event.cate2
                +'&title=' + event.title
                +'&content=' + event.content
                +'&memo=' + event.memo
                +'&completion=' + event.completion
                +'&writerId=' + localStorage.getItem("userId")
                +'&startTime=' + event.startTime 
                +'&endTime=' + event.endTime
                +'&allDay=' + event.allDay
                +'&no=' + event.no;
      this.http.post(addr, data, options)
      // .map(res=>res.json())
      .subscribe((res)=>{
                  let alert = this.alertCtrl.create({
                      title: '일정이 등록되었습니다.',
                      buttons: ['확인']
                    });
                  alert.present();
                  this.viewCtrl.dismiss(this.event);
                }, (err) => {
                  console.log(err);
                    let alert = this.alertCtrl.create({
                      title: '일정이 등록되지 않습니다. 관리자에게 문의하세요',
                      buttons: ['확인']
                    });
                  alert.present();
                   
                });
      
    }
  }
}
